gcaApp()
roxygenize()
roxygenize()
devtools::load_all()
gcaApp()
devtools::load_all()
roxygenize()
check()
?summarize
gcaApp()
gcaApp()
devtools::load_all()
gcaApp()
View(sjekk)
View(sjekk)
str(sjekk)
df$period - df$age
sjekk$period - sjekk$age
sjekk$period - as.integer(sjekk$age)
sjekk$period
sjekk$period[1]
as.integer(sjekk$age[1])
as.character(df$age[1])
as.character(sjekk$age[1])
as.integer(as.character(sjekk$age[1]))
install.packages('directlabels')
usethis::use_package('directlabels')
devtools::load_all()
gcaApp()
devtools::load_all()
gcaApp()
devtools::load_all()
gcaApp()
devtools::load_all()
gcaApp()
#' @title plot age group plot
#' @description figure with separate plot for each data frame
#' @param df dataframe
#' @param fstate federal state
plotAgGrid <- function(df, fstate){
colors <- c("incidence" = "blue", "mortality" = "red", "complete" = "black")
ggplot(df, aes(x=period)) +
geom_line(aes(y=incPer100k, color = "incidence"), size = 1, alpha = 0.7) +
geom_line(aes(y=mortPer100k, color= "mortality"), size = 1, alpha= 0.7) +
facet_wrap(~agegroup) +
theme_bw()+
ylab('Rate per 100,000 persons') +
if(fstate != "ALL") geom_vline(xintercept=getCompleteYears(fstate), linetype=2)
}
###---------------------------------MODULE----------------------------
AgeGroupPlotUI <- function(id) {
states <-
c("ALL","BB","BE","BW","BY","HB","HE","HH","MV",
"NI","NW","RP","SH","SL","SN","ST","TH")
sidebarLayout(
sidebarPanel(selectInput(NS(id,"state"),
"Select a state",
choices=states)),
mainPanel(plotOutput(NS(id,"plot")))
)
}
AgeGroupPlotServer <- function(id, data) {
moduleServer(id, function(input, output, session) {
agDf <- reactive(prepareData(data(),input$state))
output$plot <- renderPlot(plotAgGrid(agDf(),input$state))
})
}
devtools::load_all()
rm(list = c("AgeGroupPlotServer", "AgeGroupPlotUI", "plotAgGrid"))
333
333
sss <- 333
ttt <- 333
rm(list = c("AgeGroupPlotServer", "AgeGroupPlotUI", "plotAgGrid"))
jaj
gcaApp()
devtools:load_all()
devtools::load_all()
gcaApp()
View(sjekk)
devtools::load_all()
gcaApp()
devtools::load_all()
gcaApp()
gcaApp()
gcaApp()
check()
?aggregate
devtools::load_all()
usethis::use_package('gridExtra')
devtools::load_all()
check()
check()
check()
check()
roxygenize()
devtools::load_all()
check()
roxygenize(9)
roxygenize(9)
roxygenize()
devtools::load_all()
devtools::load_all(".")
check()
check()
View(result)
View(sjekk)
devtools::load_all()
gcaApp()
devtools
devtools::load_all()
gcaApp
gcaApp()
gcaApp()
View(testdata)
View(testdata)
gcaApp()
print("HELLO")
"HELo"
"""""""
""""""""
""""
"''"
"'""'"
'""'
'''''''''
":O"
tweakHistogramData <- function(df){
temp <- prepareData(df)
temp <- subset(temp, 'complete'==T)
temp <- as.data.frame(dplyr::summarise(group_by(temp,
agegroup = agegroup),
incidence = sum(incidence),
mortality = sum(mortality),
population = sum(population)))
}
tweakHistogramData(testdata)
tweakHistogramData(testdata)
print("HELLO")
tweakHistogramData <- function(df){
temp <- prepareData(df)
temp <- subset(temp, 'complete'==T)
temp <- as.data.frame(dplyr::summarise(group_by(temp,
agegroup = agegroup),
incidence = sum(incidence),
mortality = sum(mortality),
population = sum(population)))
return(temp)
}
tweakHistogramData(testdata)
View(testdata)
tweakHistogramData <- function(df){
temp <- prepareData(df)
temp <- subset(temp, 'complete'==TRUE)
temp <- as.data.frame(dplyr::summarise(group_by(temp,
agegroup = agegroup),
incidence = sum(incidence),
mortality = sum(mortality),
population = sum(population)))
return(temp)
}
tweakHistogramData(testdata)
tweakHistogramData <- function(df){
temp <- prepareData(df)
temp <- subset(temp, 'complete'==TRUE)
hm <<- temp
temp <- as.data.frame(dplyr::summarise(group_by(temp,
agegroup = agegroup),
incidence = sum(incidence),
mortality = sum(mortality),
population = sum(population)))
return(temp)
}
tweakHistogramData(testdata)
tweakHistogramData <- function(df){
temp <- prepareData(df)
temp <- subset(temp, complete==TRUE)
hm <<- temp
temp <- as.data.frame(dplyr::summarise(group_by(temp,
agegroup = agegroup),
incidence = sum(incidence),
mortality = sum(mortality),
population = sum(population)))
return(temp)
}
tweakHistogramData(testdata)
subset(temp, 'complete')
tweakHistogramData <- function(df){
df <- subset(df, 'complete'==T)
df <- dplyr::summarise(dplyr::group_by(df,
agegroup = agegroup),
incidence = sum(incidence),
mortality = sum(mortality),
population= sum(population))
}
df$incPer100k  <- df$incidence/df$population*1e5
df$mortPer100k <- df$mortality/df$population*1e5
return(df)
tweakHistogramData <- function(df){
df <- subset(df, 'complete'==T)
df <- dplyr::summarise(dplyr::group_by(df,
agegroup = agegroup),
incidence = sum(incidence),
mortality = sum(mortality),
population= sum(population))
}
df$incPer100k  <- df$incidence/df$population*1e5
df$mortPer100k <- df$mortality/df$population*1e5
return(df)
tweakHistogramData <- function(df){
df <- subset(df, 'complete'==T)
df <- dplyr::summarise(dplyr::group_by(df,
agegroup = agegroup),
incidence = sum(incidence),
mortality = sum(mortality),
population= sum(population))
df$incPer100k  <- df$incidence/df$population*1e5
df$mortPer100k <- df$mortality/df$population*1e5
return(df)
}
tweakHistogramData(testdata)
testdata
subset(testdata, 'complete'==T)
subset(testdata, 'complete'==TRUE)
subset(testdata, 'complete')
subset(testdata, subset='complete')
subset(testdata, 'complete' != F)
subset(df, 'complete'== 'TRUE')
subset(testdata, 'complete' == 'TRUE')
str(testdata)
isTRUE(TRUE)
subset(testdata, isTRUE('complete'))
subset(testdata, isTRUE(complete))
testdata$complete
testdata$complete==T
testdata[testdata$complete==T]
testdata[testdata$complete==T,]
subset(testdata, complete==TRUE)
tweakHistogramData <- function(df){
df <- subset(df, complete==T)
df <- as.data.frame(dplyr::summarise(dplyr::group_by(df,
agegroup = agegroup),
incidence = sum(incidence),
mortality = sum(mortality),
population= sum(population)))
df$incPer100k  <- df$incidence/df$population*1e5
df$mortPer100k <- df$mortality/df$population*1e5
return(df)}
tweakHistogramData(testdata)
tweakHistogramData <- function(df){
df <- subset(df, complete==T)
df <- as.data.frame(dplyr::summarise(dplyr::group_by(df,
agegroup = agegroup,
FedState = FedState),
incidence = sum(incidence),
mortality = sum(mortality),
population= sum(population)))
df$incPer100k  <- df$incidence/df$population*1e5
df$mortPer100k <- df$mortality/df$population*1e5
return(df)}
tweakHistogramData(testdata)
subset(testdata, FedState = 'BB')
subset(testdata, FedState == 'BB')
tester <- subset(testdata, FedState == 'BB')
tester <- subset(testdata, FedState == 'BB')
ggplot(tester, aes(x=agegroup, group=1))+
geom_histogram(aes(y=incPer100k)) +
geom_histogram(aes(y=mortPer100k))
test1 <- tweakHistogramData(testdata)
test2 <- subset(testdata, FedState == 'BB')
#' @title prepare data for histogram plot
#' @description prepares data frame for histogram plotting.
#' Selects only complete data and then sums over agegroups
#' @param df dataframe
#' @return dataframe ready for plotting
tweakHistogramData <- function(df){
df <- subset(df, complete==T)
df <- as.data.frame(dplyr::summarise(dplyr::group_by(df,
agegroup = agegroup,
FedState = FedState),
incidence = sum(incidence),
mortality = sum(mortality),
population= sum(population)))
df$incPer100k  <- df$incidence/df$population*1e5
df$mortPer100k <- df$mortality/df$population*1e5
return(df)}
test1 <- tweakHistogramData(testdata)
test2 <- subset(testdata, FedState == 'BB')
ggplot(tester, aes(x=agegroup, group=1))+
geom_histogram(aes(y=incPer100k)) +
geom_histogram(aes(y=mortPer100k))
#' @title prepare data for histogram plot
#' @description prepares data frame for histogram plotting.
#' Selects only complete data and then sums over agegroups
#' @param df dataframe
#' @return dataframe ready for plotting
tweakHistogramData <- function(df){
df <- subset(df, complete==T)
df <- as.data.frame(dplyr::summarise(dplyr::group_by(df,
agegroup = agegroup,
FedState = FedState),
incidence = sum(incidence),
mortality = sum(mortality),
population= sum(population)))
df$incPer100k  <- df$incidence/df$population*1e5
df$mortPer100k <- df$mortality/df$population*1e5
return(df)}
test1 <- tweakHistogramData(testdata)
test2 <- subset(test1, FedState == 'BB')
ggplot(test2, aes(x=agegroup, group=1))+
geom_histogram(aes(y=incPer100k)) +
geom_histogram(aes(y=mortPer100k))
ggplot(test2, aes(x=agegroup))+
geom_histogram(aes(y=incPer100k)) +
geom_histogram(aes(y=mortPer100k))
ggplot(test2, aes(x=agegroup))+
geom_histogram(aes(y=incPer100k)) #+
ggplot(test2, aes(x=agegroup,incPer100k ))+
geom_histogram() #+
ggplot(test2, aes(x=agegroup, y =incPer100k ))+
geom_histogram() #+
ggplot(test2)+
geom_histogram(x=agegroup) #+
ggplot(test2)+
geom_histogram(aes(x=agegroup)) #+
ggplot(data=test2)+
geom_histogram(aes(x=agegroup)) #+
ggplot(data=test2)+
geom_bar(aes(x=agegroup, y=incPer100k)) #+
ggplot(data=test2, aes(agegroup))+
geom_bar(aes(weight=incPer100k)) #+
ggplot(data=test2, aes(agegroup))+
geom_bar(aes(weight=incPer100k)) +
geom_bar(aes(weight=mortPer100k))
gather(test2,event, total, incPer100k:mortPer100k)
library(tidyr)
gather(test2,event, total, incPer100k:mortPer100k)
library(tidyr)
gather(test2,event, total, incPer100k:mortPer100k)
gather(test2,key = event, total, incPer100k:mortPer100k)
gather(test2,key = event, value = total, incPer100k:mortPer100k)
gather(test2,key = event, value = total, convert = incPer100k:mortPer100k)
gather(test2,key = event, value = total, factor_key  = incPer100k:mortPer100k)
gather(test2,key = event, value = total, incPer100k:mortPer100k)
?gather
her <- gather(test2,key = event, value = total, incPer100k:mortPer100k)
plot <- ggplot(her, aes(agegroup, total, fill=event))
plot <- plot + geom_bar(stat = "identity", position = 'dodge')
plot
her <- gather(test2,key = event, value = total, incPer100k:mortPer100k)
plot <- ggplot(her, aes(agegroup, total, fill=event))
plot <- plot + geom_bar(stat = "identity", position = 'dodge')
plot <- plot + scale_x_discrete(guide = guide_axis(check.overlap = TRUE))
plot
her <- gather(test2,key = event, value = total, incPer100k:mortPer100k)
plot <- ggplot(her, aes(agegroup, total, fill=event))
plot <- plot + geom_bar(stat = "identity", position = 'dodge')
plot <- plot + scale_x_discrete(guide = guide_axis(n.dodge = 2))
plot
her <- gather(test2,key = event, value = total, incPer100k:mortPer100k)
plot <- ggplot(her, aes(agegroup, total, fill=event))
plot <- plot + geom_bar(stat = "identity", position = 'dodge')
plot <- plot + scale_x_discrete(guide = guide_axis(n.dodge = 5))
plot
plot <- ggplot(her, aes(agegroup, total, fill=event))
plot <- plot + geom_bar(stat = "identity", position = 'dodge')
plot <- plot + scale_x_discrete(guide = guide_axis(check.overlap=T))
plot
gcaApp()
her <- gather(test2,key = event, value = total, incPer100k:mortPer100k)
ggplot(her, aes(agegroup, total, fill=event))+
geom_bar(stat = "identity", position = 'dodge')+
geofacet::facet_geo(~ FedState, grid = "de_states_grid1", label='name') +
scale_x_discrete(guide = guide_axis(check.overlap=T)) +
lab(sprintf("%s per 100 k","rate"))+
xlab(sprintf("%s", "age group")) +
theme(strip.text.x = element_text(size = 6), plot.title = element_text(hjust = 0.5))
her <- gather(test2,key = event, value = total, incPer100k:mortPer100k)
ggplot(her, aes(agegroup, total, fill=event))+
geom_bar(stat = "identity", position = 'dodge')+
geofacet::facet_geo(~ FedState, grid = "de_states_grid1", label='name') +
scale_x_discrete(guide = guide_axis(check.overlap=T)) +
ylab(sprintf("%s per 100 k","rate"))+
xlab(sprintf("%s", "age group")) +
theme(strip.text.x = element_text(size = 6), plot.title = element_text(hjust = 0.5))
test1 <- tweakHistogramData(testdata)
library(tidyr)
her <- gather(test1,key = event, value = total, incPer100k:mortPer100k)
ggplot(her, aes(agegroup, total, fill=event))+
geom_bar(stat = "identity", position = 'dodge')+
geofacet::facet_geo(~ FedState, grid = "de_states_grid1", label='name') +
scale_x_discrete(guide = guide_axis(check.overlap=T)) +
ylab(sprintf("%s per 100 k","rate"))+
xlab(sprintf("%s", "age group")) +
theme(strip.text.x = element_text(size = 6), plot.title = element_text(hjust = 0.5))
library(tidyr)
her <- gather(test1,key = event, value = total, incPer100k:mortPer100k)
test1 <- tweakHistogramData(testdata)
library(tidyr)
her <- gather(test1,key = event, value = total, incPer100k:mortPer100k)
ggplot(her, aes(agegroup, total, fill=event))+
geom_bar(stat = "identity", position = 'dodge')+
geofacet::facet_geo(~ FedState, grid = "de_states_grid1", label='name') +
scale_x_discrete(guide = guide_axis(check.overlap=T)) +
ylab(sprintf("%s per 100 k","rate"))+
xlab(sprintf("%s", "age group")) +
theme(legend.title = element_blank())
her <- gather(test1,key = event, value = total, inc:mort = incPer100k:mortPer100k)
her <- gather(test1,key = event, value = total, 'inc:mort' = incPer100k:mortPer100k)
her <- gather(test1,key = event, value = total, incPer100k:mortPer100k)
ggplot(her, aes(agegroup, total, fill=event))+
geom_bar(stat = "identity", position = 'dodge')+
geofacet::facet_geo(~ FedState, grid = "de_states_grid1", label='name') +
scale_x_discrete(guide = guide_axis(check.overlap=T)) +
scale_color_manual(labels = c("incidence", "mortality"), values = c("blue", "red"))+
ylab(sprintf("%s per 100 k","rate"))+
xlab(sprintf("%s", "age group")) +
theme(legend.title = element_blank())
library(tidyr)
her <- gather(test1,key = event, value = total, incPer100k:mortPer100k)
ggplot(her, aes(agegroup, total, fill=event, color=event))+
geom_bar(stat = "identity", position = 'dodge')+
geofacet::facet_geo(~ FedState, grid = "de_states_grid1", label='name') +
scale_x_discrete(guide = guide_axis(check.overlap=T)) +
scale_color_manual(labels = c("incidence", "mortality"), values = c("blue", "red"))+
ylab(sprintf("%s per 100 k","rate"))+
xlab(sprintf("%s", "age group")) +
theme(legend.title = element_blank())
her <- gather(test1,key = event, value = total, incPer100k:mortPer100k)
ggplot(her, aes(agegroup, total, color=event))+
geom_bar(stat = "identity", position = 'dodge')+
geofacet::facet_geo(~ FedState, grid = "de_states_grid1", label='name') +
scale_x_discrete(guide = guide_axis(check.overlap=T)) +
scale_color_manual(labels = c("incidence", "mortality"), values = c("blue", "red"))+
ylab(sprintf("%s per 100 k","rate"))+
xlab(sprintf("%s", "age group")) +
theme(legend.title = element_blank())
ggplot(her, aes(agegroup, total, fill=event))+
geom_bar(stat = "identity", position = 'dodge')+
geofacet::facet_geo(~ FedState, grid = "de_states_grid1", label='name') +
scale_x_discrete(guide = guide_axis(check.overlap=T)) +
scale_color_manual(labels = c("incidence", "mortality"), values = c("blue", "red"))+
ylab(sprintf("%s per 100 k","rate"))+
xlab(sprintf("%s", "age group")) +
theme(legend.title = element_blank())
usethis::use_package('plyr')
her <- gather(test1,key = event, value = total, incPer100k:mortPer100k)
her <- plyr::revalue(x, c("incPer100k"="two", "mortPer100"="three"))
ggplot(her, aes(agegroup, total, fill=event))+
geom_bar(stat = "identity", position = 'dodge')+
geofacet::facet_geo(~ FedState, grid = "de_states_grid1", label='name') +
scale_x_discrete(guide = guide_axis(check.overlap=T)) +
scale_color_manual(labels = c("incidence", "mortality"), values = c("blue", "red"))+
ylab(sprintf("%s per 100 k","rate"))+
xlab(sprintf("%s", "age group")) +
theme(legend.title = element_blank())
her <- gather(test1,key = event, value = total, incPer100k:mortPer100k)
her <- plyr::revalue(her, c("incPer100k"="two", "mortPer100k"="three"))
ggplot(her, aes(agegroup, total, fill=event))+
geom_bar(stat = "identity", position = 'dodge')+
geofacet::facet_geo(~ FedState, grid = "de_states_grid1", label='name') +
scale_x_discrete(guide = guide_axis(check.overlap=T)) +
scale_color_manual(labels = c("incidence", "mortality"), values = c("blue", "red"))+
ylab(sprintf("%s per 100 k","rate"))+
xlab(sprintf("%s", "age group")) +
theme(legend.title = element_blank())
her <- gather(test1,key = event, value = total, incPer100k:mortPer100k)
her$event <- plyr::revalue(her$event, c("incPer100k"="two", "mortPer100k"="three"))
ggplot(her, aes(agegroup, total, fill=event))+
geom_bar(stat = "identity", position = 'dodge')+
geofacet::facet_geo(~ FedState, grid = "de_states_grid1", label='name') +
scale_x_discrete(guide = guide_axis(check.overlap=T)) +
scale_color_manual(labels = c("incidence", "mortality"), values = c("blue", "red"))+
ylab(sprintf("%s per 100 k","rate"))+
xlab(sprintf("%s", "age group")) +
theme(legend.title = element_blank())
library(tidyr)
her <- gather(test1,key = event, value = total, incPer100k:mortPer100k)
her$event <- plyr::revalue(her$event, c("incPer100k"="incidence", "mortPer100k"="mortality"))
ggplot(her, aes(agegroup, total, fill=event))+
geom_bar(stat = "identity", position = 'dodge')+
geofacet::facet_geo(~ FedState, grid = "de_states_grid1", label='name') +
scale_x_discrete(guide = guide_axis(check.overlap=T)) +
scale_color_manual(labels = c("incidence", "mortality"), values = c("blue", "red"))+
ylab(sprintf("%s per 100 k","rate"))+
xlab(sprintf("%s", "age group")) +
theme(legend.title = element_blank())
usethis::use_package()
usethis::use_package('tidyr')
gcaApp()
devtools::load_all()
rm(list = c("tweakHistogramData"))
devtools::load_all()
gcaApp()
devtools::load_all()
gcaApp()
gcaApp()
gcaApp()
devtools::load_all()
gcaApp()
devtools::load_all()
devtools::load_all()
git_init
git_init()
git init
install_github("vojind/gca")
github_install('vojind/gca')
install_github('vojind/gca')
gcaApp()
devtools::load_all()
gcaApp()
wk
