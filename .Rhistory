}
getLambdas <- function(BAPC=F){
incData = removeYoung(getData("Trondheim/c61_incidence_.xlsx", "SL")[["inc"]])
popData = removeYoung(getData("Trondheim/c61_incidence_.xlsx", "SL")[["pop"]])
mortData = removeYoung(getData("Trondheim/c61_mortality_.xlsx", "SL")[["inc"]])
if(BAPC==T){
mort <- as.data.frame(t(mortData))
pop <- as.data.frame(t(popData))
agegroup = colnames(mort)
APC <- APCList(mort, pop, gf=5, agelab=agegroup)
result <- BAPC(APC, predict=list(npredict=0, retro=TRUE))
mortFinal <- as.data.frame(t(sapply(result@agespec.rate, "[",,"mean")))
incFinal <- incData/popData
lambdas <- round(incFinal/mortFinal,3)
return (lambdas)
}
lambdas <- round((incData/mortData),3)
return(lambdas)
}
load("~/Documents/testeNP/data/registry.rda")
states <- c("BB","BE","BW","BY","HB","HE","HH","MV",
"NI","NW","RP","SH","SL","SN","ST","TH")
lambdas <- getLambdas(T)
pred = list();  obs = list()
for (s in states){
incData = removeYoung(getData("Trondheim/c61_incidence_.xlsx",s)[["inc"]])
popData = removeYoung(getData("Trondheim/c61_incidence_.xlsx",s)[["pop"]])
mortData = removeYoung(getData("Trondheim/c61_mortality_.xlsx",s)[["inc"]])
#{mort <- as.data.frame(t(mortData))
#pop <- as.data.frame(t(popData))
#agegroup = colnames(mort)
#APC <- APCList(mort, pop, gf=5, agelab=agegroup)
#result <- BAPC(APC, predict=list(npredict=0, retro=TRUE))
#mortFinal <- as.data.frame(t(sapply(result@agespec.rate, "[",,"mean")))}
#mortData <- mortFinal*popData
pred1[s] <- list(mortData*lambdas*1e5/popData)
obs1[s] <- list(incData*1e5/popData)
pred[[s]] <- sapply(pred1[[s]],weighted.mean, w=wstand)
obs[[s]] <- sapply(obs1[[s]],weighted.mean, w=wstand)
}
#logErrsAdv = list();
logErrs = list();
#rmseAdv = list();
rmse = list();
par(mfrow=c(4,4))
for (s in states){
#plot(as.numeric(names(pred[[s]])),pred[[s]], xlab="period", ylab="incidences per 100,000", type="l", ylim = c(0,4e2))
#lines(as.numeric(names(obs[[s]])),obs[[s]], col="red")
#title(main=s)
years <- getCompleteYears(s)
#abline(v=getCompleteYears(s))
if(!is.na(years)){
years = as.character(seq(years[1],years[2]))
rmseAdv[s] <- sqrt(sum((pred[[s]][years]-obs[[s]][years])^2))
logErrsAdv[s] <- sum(dpois(round(unlist(pred1[[s]][years])),round(unlist(obs1[[s]][years]))))
}
}
library(geofacet)
temp <- as.data.frame(pred)
temp$period <- rownames(temp)
tempObs <- as.data.frame(obs)
tempObs$period <- rownames(tempObs)
df <- gather(as.data.frame(temp),"FedState","pred",-period)
df2 <- gather(as.data.frame(tempObs), "FedState","obs", -period)
df3 <- merge.data.frame(df,df2)
ablines <- as.data.frame(t(sapply(states,FUN=function(x) getCompleteYears(x))))
ablines <- ablines - 1989
ablines$FedState <- rownames(ablines)
pdf(file = "AndreaPredAdv3.pdf", width = 10, height = 10)
ggplot(df3, aes(period, group=1))+
geom_line(aes(y=pred, colour="predictions"), size=1) +
geom_line(aes(y=obs, colour="observations"), size=1) +
geom_vline(data = ablines, aes(xintercept = V1), linetype="dashed") +
geom_vline(data = ablines, aes(xintercept = V2), linetype="dashed") +
geofacet::facet_geo(~ FedState, grid = 'de_states_grid1', label='name') +
theme(text = element_text(size = 10))+
theme(legend.text=element_text(size=13), legend.title=element_text(size=13))+
ylab(sprintf("%s per 100 k","incidences"))+
xlab(sprintf("%s", "period")) +
scale_x_discrete(guide = guide_axis(check.overlap = T))
dev.off()
#return(rmseAdv)
#rmseAdv <- main(F,"AndreaPred.pdf")
#rmseAdvAdv <- main(T,"AndreaPredAdv.pdf")
library(ggplot2)
library(magrittr)
library(tidyr)
library(BAPC)
wstand <- c(0.065, 0.06, 0.055, 0.05, 0.04, 0.025, 0.025)
getData <- function(filename, name){
indataV <-
readxl::read_excel(filename,sheet = name, skip = 2, col_names = T) %>%
as.data.frame(.) %>%
replace(is.na(.),0) %>%
set_rownames(.,.[,1]) %>%
.[-c(1)]
inpopV<-
inpopV<-
readxl::read_excel("Trondheim/population.xlsx",sheet = name, skip = 2, col_names = T) %>%
as.data.frame(.) %>%
replace(is.na(.),0) %>%
split(., factor(sort(rank(row.names(.))%%2))) %>%
set_names(.,c("MenPop","WomenPop")) %>%
lapply(.,FUN=function(x) set_rownames(x,x[,2]) %>% .[-c(1,2)])
liste <- list(inc=indataV,pop=(inpopV[[1]] + inpopV[[2]]))
return(liste)
}
getCompleteYears <- function(fstate){
years <-
if(fstate=='ALL*') c(2001,2014) else registry[fstate, c('CheckedFrom', 'CheckedTo')]
return(c(years[[1]], years[[2]]))
}
collapseRows <- function(df){
df[1, ] <- colSums(df[1:3, ])
rownames(df)[1] <- "0 - 14"
return(df[-(2:3),])
}
removeYoung <- function(df){
index = match("55 - 59", rownames(df))-1
df[-c(1:index),]
}
getLambdas <- function(BAPC=F){
incData = removeYoung(getData("Trondheim/c61_incidence_.xlsx", "SL")[["inc"]])
popData = removeYoung(getData("Trondheim/c61_incidence_.xlsx", "SL")[["pop"]])
mortData = removeYoung(getData("Trondheim/c61_mortality_.xlsx", "SL")[["inc"]])
if(BAPC==T){
mort <- as.data.frame(t(mortData))
pop <- as.data.frame(t(popData))
agegroup = colnames(mort)
APC <- APCList(mort, pop, gf=5, agelab=agegroup)
result <- BAPC(APC, predict=list(npredict=0, retro=TRUE))
mortFinal <- as.data.frame(t(sapply(result@agespec.rate, "[",,"mean")))
incFinal <- incData/popData
lambdas <- round(incFinal/mortFinal,3)
return (lambdas)
}
lambdas <- round((incData/mortData),3)
return(lambdas)
}
load("~/Documents/testeNP/data/registry.rda")
states <- c("BB","BE","BW","BY","HB","HE","HH","MV",
"NI","NW","RP","SH","SL","SN","ST","TH")
lambdas <- getLambdas(F)
pred = list();  obs = list()
for (s in states){
incData = removeYoung(getData("Trondheim/c61_incidence_.xlsx",s)[["inc"]])
popData = removeYoung(getData("Trondheim/c61_incidence_.xlsx",s)[["pop"]])
mortData = removeYoung(getData("Trondheim/c61_mortality_.xlsx",s)[["inc"]])
#{mort <- as.data.frame(t(mortData))
#pop <- as.data.frame(t(popData))
#agegroup = colnames(mort)
#APC <- APCList(mort, pop, gf=5, agelab=agegroup)
#result <- BAPC(APC, predict=list(npredict=0, retro=TRUE))
#mortFinal <- as.data.frame(t(sapply(result@agespec.rate, "[",,"mean")))}
#mortData <- mortFinal*popData
pred1[s] <- list(mortData*lambdas*1e5/popData)
obs1[s] <- list(incData*1e5/popData)
pred[[s]] <- sapply(pred1[[s]],weighted.mean, w=wstand)
obs[[s]] <- sapply(obs1[[s]],weighted.mean, w=wstand)
}
#logErrsAdv = list();
logErrs = list();
#rmseAdv = list();
rmse = list();
par(mfrow=c(4,4))
for (s in states){
#plot(as.numeric(names(pred[[s]])),pred[[s]], xlab="period", ylab="incidences per 100,000", type="l", ylim = c(0,4e2))
#lines(as.numeric(names(obs[[s]])),obs[[s]], col="red")
#title(main=s)
years <- getCompleteYears(s)
#abline(v=getCompleteYears(s))
if(!is.na(years)){
years = as.character(seq(years[1],years[2]))
rmse[s] <- sqrt(sum((pred[[s]][years]-obs[[s]][years])^2))
#rmseAdv[s] <- sqrt(sum((pred[[s]][years]-obs[[s]][years])^2))
logErrs[s] <- sum(dpois(round(unlist(pred1[[s]][years])),round(unlist(obs1[[s]][years]))))
#logErrsAdv[s] <- sum(dpois(round(unlist(pred1[[s]][years])),round(unlist(obs1[[s]][years]))))
}
}
library(geofacet)
temp <- as.data.frame(pred)
temp$period <- rownames(temp)
tempObs <- as.data.frame(obs)
tempObs$period <- rownames(tempObs)
df <- gather(as.data.frame(temp),"FedState","pred",-period)
df2 <- gather(as.data.frame(tempObs), "FedState","obs", -period)
df3 <- merge.data.frame(df,df2)
ablines <- as.data.frame(t(sapply(states,FUN=function(x) getCompleteYears(x))))
ablines <- ablines - 1989
ablines$FedState <- rownames(ablines)
pdf(file = "AndreaPredAdv3.pdf", width = 10, height = 10)
ggplot(df3, aes(period, group=1))+
geom_line(aes(y=pred, colour="predictions"), size=1) +
geom_line(aes(y=obs, colour="observations"), size=1) +
geom_vline(data = ablines, aes(xintercept = V1), linetype="dashed") +
geom_vline(data = ablines, aes(xintercept = V2), linetype="dashed") +
geofacet::facet_geo(~ FedState, grid = 'de_states_grid1', label='name') +
theme(text = element_text(size = 10))+
theme(legend.text=element_text(size=13), legend.title=element_text(size=13))+
ylab(sprintf("%s per 100 k","incidences"))+
xlab(sprintf("%s", "period")) +
scale_x_discrete(guide = guide_axis(check.overlap = T))
dev.off()
#return(rmseAdv)
#rmseAdv <- main(F,"AndreaPred.pdf")
#rmseAdvAdv <- main(T,"AndreaPredAdv.pdf")
library(ggplot2)
library(magrittr)
library(tidyr)
library(BAPC)
wstand <- c(0.065, 0.06, 0.055, 0.05, 0.04, 0.025, 0.025)
getData <- function(filename, name){
indataV <-
readxl::read_excel(filename,sheet = name, skip = 2, col_names = T) %>%
as.data.frame(.) %>%
replace(is.na(.),0) %>%
set_rownames(.,.[,1]) %>%
.[-c(1)]
inpopV<-
inpopV<-
readxl::read_excel("Trondheim/population.xlsx",sheet = name, skip = 2, col_names = T) %>%
as.data.frame(.) %>%
replace(is.na(.),0) %>%
split(., factor(sort(rank(row.names(.))%%2))) %>%
set_names(.,c("MenPop","WomenPop")) %>%
lapply(.,FUN=function(x) set_rownames(x,x[,2]) %>% .[-c(1,2)])
liste <- list(inc=indataV,pop=(inpopV[[1]] + inpopV[[2]]))
return(liste)
}
getCompleteYears <- function(fstate){
years <-
if(fstate=='ALL*') c(2001,2014) else registry[fstate, c('CheckedFrom', 'CheckedTo')]
return(c(years[[1]], years[[2]]))
}
collapseRows <- function(df){
df[1, ] <- colSums(df[1:3, ])
rownames(df)[1] <- "0 - 14"
return(df[-(2:3),])
}
removeYoung <- function(df){
index = match("55 - 59", rownames(df))-1
df[-c(1:index),]
}
getLambdas <- function(BAPC=F){
incData = removeYoung(getData("Trondheim/c61_incidence_.xlsx", "SL")[["inc"]])
popData = removeYoung(getData("Trondheim/c61_incidence_.xlsx", "SL")[["pop"]])
mortData = removeYoung(getData("Trondheim/c61_mortality_.xlsx", "SL")[["inc"]])
if(BAPC==T){
mort <- as.data.frame(t(mortData))
pop <- as.data.frame(t(popData))
agegroup = colnames(mort)
APC <- APCList(mort, pop, gf=5, agelab=agegroup)
result <- BAPC(APC, predict=list(npredict=0, retro=TRUE))
mortFinal <- as.data.frame(t(sapply(result@agespec.rate, "[",,"mean")))
incFinal <- incData/popData
lambdas <- round(incFinal/mortFinal,3)
return (lambdas)
}
lambdas <- round((incData/mortData),3)
return(lambdas)
}
load("~/Documents/testeNP/data/registry.rda")
states <- c("BB","BE","BW","BY","HB","HE","HH","MV",
"NI","NW","RP","SH","SL","SN","ST","TH")
lambdas <- getLambdas(T)
pred = list();  obs = list()
for (s in states){
incData = removeYoung(getData("Trondheim/c61_incidence_.xlsx",s)[["inc"]])
popData = removeYoung(getData("Trondheim/c61_incidence_.xlsx",s)[["pop"]])
mortData = removeYoung(getData("Trondheim/c61_mortality_.xlsx",s)[["inc"]])
#{mort <- as.data.frame(t(mortData))
#pop <- as.data.frame(t(popData))
#agegroup = colnames(mort)
#APC <- APCList(mort, pop, gf=5, agelab=agegroup)
#result <- BAPC(APC, predict=list(npredict=0, retro=TRUE))
#mortFinal <- as.data.frame(t(sapply(result@agespec.rate, "[",,"mean")))}
#mortData <- mortFinal*popData
pred1[s] <- list(mortData*lambdas*1e5/popData)
obs1[s] <- list(incData*1e5/popData)
pred[[s]] <- sapply(pred1[[s]],weighted.mean, w=wstand)
obs[[s]] <- sapply(obs1[[s]],weighted.mean, w=wstand)
}
logErrsAdv = list();
#logErrs = list();
rmseAdv = list();
#rmse = list();
par(mfrow=c(4,4))
for (s in states){
#plot(as.numeric(names(pred[[s]])),pred[[s]], xlab="period", ylab="incidences per 100,000", type="l", ylim = c(0,4e2))
#lines(as.numeric(names(obs[[s]])),obs[[s]], col="red")
#title(main=s)
years <- getCompleteYears(s)
#abline(v=getCompleteYears(s))
if(!is.na(years)){
years = as.character(seq(years[1],years[2]))
#rmse[s] <- sqrt(sum((pred[[s]][years]-obs[[s]][years])^2))
rmseAdv[s] <- sqrt(sum((pred[[s]][years]-obs[[s]][years])^2))
#logErrs[s] <- sum(dpois(round(unlist(pred1[[s]][years])),round(unlist(obs1[[s]][years]))))
logErrsAdv[s] <- sum(dpois(round(unlist(pred1[[s]][years])),round(unlist(obs1[[s]][years]))))
}
}
library(geofacet)
temp <- as.data.frame(pred)
temp$period <- rownames(temp)
tempObs <- as.data.frame(obs)
tempObs$period <- rownames(tempObs)
df <- gather(as.data.frame(temp),"FedState","pred",-period)
df2 <- gather(as.data.frame(tempObs), "FedState","obs", -period)
df3 <- merge.data.frame(df,df2)
ablines <- as.data.frame(t(sapply(states,FUN=function(x) getCompleteYears(x))))
ablines <- ablines - 1989
ablines$FedState <- rownames(ablines)
pdf(file = "AndreaPredAdv3.pdf", width = 10, height = 10)
ggplot(df3, aes(period, group=1))+
geom_line(aes(y=pred, colour="predictions"), size=1) +
geom_line(aes(y=obs, colour="observations"), size=1) +
geom_vline(data = ablines, aes(xintercept = V1), linetype="dashed") +
geom_vline(data = ablines, aes(xintercept = V2), linetype="dashed") +
geofacet::facet_geo(~ FedState, grid = 'de_states_grid1', label='name') +
theme(text = element_text(size = 10))+
theme(legend.text=element_text(size=13), legend.title=element_text(size=13))+
ylab(sprintf("%s per 100 k","incidences"))+
xlab(sprintf("%s", "period")) +
scale_x_discrete(guide = guide_axis(check.overlap = T))
dev.off()
#return(rmseAdv)
#rmseAdv <- main(F,"AndreaPred.pdf")
#rmseAdvAdv <- main(T,"AndreaPredAdv.pdf")
rmse
logErrs
logErrsAdv
log(2.5)
log(c(1.5,1.34,1.35))
-log(c(1.5,1.34,1.35))
library(ggplot2)
library(magrittr)
library(tidyr)
library(BAPC)
wstand <- c(0.065, 0.06, 0.055, 0.05, 0.04, 0.025, 0.025)
getData <- function(filename, name){
indataV <-
readxl::read_excel(filename,sheet = name, skip = 2, col_names = T) %>%
as.data.frame(.) %>%
replace(is.na(.),0) %>%
set_rownames(.,.[,1]) %>%
.[-c(1)]
inpopV<-
inpopV<-
readxl::read_excel("Trondheim/population.xlsx",sheet = name, skip = 2, col_names = T) %>%
as.data.frame(.) %>%
replace(is.na(.),0) %>%
split(., factor(sort(rank(row.names(.))%%2))) %>%
set_names(.,c("MenPop","WomenPop")) %>%
lapply(.,FUN=function(x) set_rownames(x,x[,2]) %>% .[-c(1,2)])
liste <- list(inc=indataV,pop=(inpopV[[1]] + inpopV[[2]]))
return(liste)
}
getCompleteYears <- function(fstate){
years <-
if(fstate=='ALL*') c(2001,2014) else registry[fstate, c('CheckedFrom', 'CheckedTo')]
return(c(years[[1]], years[[2]]))
}
collapseRows <- function(df){
df[1, ] <- colSums(df[1:3, ])
rownames(df)[1] <- "0 - 14"
return(df[-(2:3),])
}
removeYoung <- function(df){
index = match("55 - 59", rownames(df))-1
df[-c(1:index),]
}
getLambdas <- function(BAPC=F){
incData = removeYoung(getData("Trondheim/c61_incidence_.xlsx", "SL")[["inc"]])
popData = removeYoung(getData("Trondheim/c61_incidence_.xlsx", "SL")[["pop"]])
mortData = removeYoung(getData("Trondheim/c61_mortality_.xlsx", "SL")[["inc"]])
if(BAPC==T){
mort <- as.data.frame(t(mortData))
pop <- as.data.frame(t(popData))
agegroup = colnames(mort)
APC <- APCList(mort, pop, gf=5, agelab=agegroup)
result <- BAPC(APC, predict=list(npredict=0, retro=TRUE))
mortFinal <- as.data.frame(t(sapply(result@agespec.rate, "[",,"mean")))
incFinal <- incData/popData
lambdas <- round(incFinal/mortFinal,3)
return (lambdas)
}
lambdas <- round((incData/mortData),3)
return(lambdas)
}
load("~/Documents/testeNP/data/registry.rda")
states <- c("BB","BE","BW","BY","HB","HE","HH","MV",
"NI","NW","RP","SH","SL","SN","ST","TH")
lambdas <- getLambdas(T)
pred = list();  obs = list()
for (s in states){
incData = removeYoung(getData("Trondheim/c61_incidence_.xlsx",s)[["inc"]])
popData = removeYoung(getData("Trondheim/c61_incidence_.xlsx",s)[["pop"]])
mortData = removeYoung(getData("Trondheim/c61_mortality_.xlsx",s)[["inc"]])
#{mort <- as.data.frame(t(mortData))
#pop <- as.data.frame(t(popData))
#agegroup = colnames(mort)
#APC <- APCList(mort, pop, gf=5, agelab=agegroup)
#result <- BAPC(APC, predict=list(npredict=0, retro=TRUE))
#mortFinal <- as.data.frame(t(sapply(result@agespec.rate, "[",,"mean")))}
#mortData <- mortFinal*popData
pred1[s] <- list(mortData*lambdas*1e5/popData)
obs1[s] <- list(incData*1e5/popData)
pred[[s]] <- sapply(pred1[[s]],weighted.mean, w=wstand)
obs[[s]] <- sapply(obs1[[s]],weighted.mean, w=wstand)
}
logErrsAdv = list();
#logErrs = list();
rmseAdv = list();
#rmse = list();
par(mfrow=c(4,4))
for (s in states){
#plot(as.numeric(names(pred[[s]])),pred[[s]], xlab="period", ylab="incidences per 100,000", type="l", ylim = c(0,4e2))
#lines(as.numeric(names(obs[[s]])),obs[[s]], col="red")
#title(main=s)
years <- getCompleteYears(s)
#abline(v=getCompleteYears(s))
if(!is.na(years)){
years = as.character(seq(years[1],years[2]))
#rmse[s] <- sqrt(sum((pred[[s]][years]-obs[[s]][years])^2))
rmseAdv[s] <- sqrt(sum((pred[[s]][years]-obs[[s]][years])^2))
#logErrs[s] <- sum(-log(dpois(round(unlist(pred1[[s]][years])),round(unlist(obs1[[s]][years])))))
logErrsAdv[s] <- sum(-log(dpois(round(unlist(pred1[[s]][years])),round(unlist(obs1[[s]][years])))))
}
}
library(geofacet)
temp <- as.data.frame(pred)
temp$period <- rownames(temp)
tempObs <- as.data.frame(obs)
tempObs$period <- rownames(tempObs)
df <- gather(as.data.frame(temp),"FedState","pred",-period)
df2 <- gather(as.data.frame(tempObs), "FedState","obs", -period)
df3 <- merge.data.frame(df,df2)
ablines <- as.data.frame(t(sapply(states,FUN=function(x) getCompleteYears(x))))
ablines <- ablines - 1989
ablines$FedState <- rownames(ablines)
pdf(file = "AndreaPredAdv3.pdf", width = 10, height = 10)
ggplot(df3, aes(period, group=1))+
geom_line(aes(y=pred, colour="predictions"), size=1) +
geom_line(aes(y=obs, colour="observations"), size=1) +
geom_vline(data = ablines, aes(xintercept = V1), linetype="dashed") +
geom_vline(data = ablines, aes(xintercept = V2), linetype="dashed") +
geofacet::facet_geo(~ FedState, grid = 'de_states_grid1', label='name') +
theme(text = element_text(size = 10))+
theme(legend.text=element_text(size=13), legend.title=element_text(size=13))+
ylab(sprintf("%s per 100 k","incidences"))+
xlab(sprintf("%s", "period")) +
scale_x_discrete(guide = guide_axis(check.overlap = T))
dev.off()
#return(rmseAdv)
#rmseAdv <- main(F,"AndreaPred.pdf")
#rmseAdvAdv <- main(T,"AndreaPredAdv.pdf")
#return(rmseAdv)
logErrs
pred1
pred$SL
logErrs
-log(dpois(round(unlist(pred1[[s]][years])),round(unlist(obs1[[s]][years]))))
round(unlist(pred1[[s]][years])
)
round(unlist(obs1[[s]][years])
)
lambdas <- getLambdas(F)
lambdas
lambdas[,1:5]
incData = removeYoung(getData("Trondheim/c61_incidence_.xlsx","SL")[["inc"]])
popData = removeYoung(getData("Trondheim/c61_incidence_.xlsx","SL")[["pop"]])
mortData = removeYoung(getData("Trondheim/c61_mortality_.xlsx","SL")[["inc"]])
incdata[,1:5]
incData[,1:5]
sllam <- lambdas[,1:5]; slinc <- incData[,1:5], slpop <- popData[,1:5], slmort <- mortData[,1:5]
sllam <- lambdas[,1:5]; slinc <- incData[,1:5]; slpop <- popData[,1:5]; slmort <- mortData[,1:5]
sllam
slinc
slmort
slpop
slpred <- sllam*slmort
slpred
slinc
slpredw <- sapply(slpred,weighted.mean, w=wstand)
slpredw
slincw <- sapply(slinc,weighted.mean, w=wstand)
slincw
slinc, slpred
slinc; slpred
slincu <- round(unlist(slinc,[1990:1994])); slpredu <- round(unlist(slpred,[1990:1994]));
slincu <- round(unlist(slinc[1990:1994])); slpredu <- round(unlist(slpred[1990:1994]));
slincu <- round(unlist(slinc[,1990:1994])); slpredu <- round(unlist(slpred[,1990:1994]));
slincu <- round(unlist(slinc[as.character(1990:1994]))); slpredu <- round(unlist(slpred[as.character(1990:1994])));
slincu <- round(unlist(slinc[as.character(1990:1994)])); slpredu <- round(unlist(slpred[as.character(1990:1994)]));
slincu
slpredu
-log(dpois(round(unlist(pred1[[s]][years])),round(unlist(obs1[[s]][years]))))
slincu; slpredu
dpois(slincu,slpredu)
log(0.001)
log(10)
log(1)
log(0.9)
-log(dpois(round(unlist(pred1[[s]][years])),round(unlist(obs1[[s]][years]))))
dpois(26,26)
dpois(1,1=
dpois(1,1)
gcaApp()
devtools::load_all()
gcaApp()
gcaApp()
gcaApp()
